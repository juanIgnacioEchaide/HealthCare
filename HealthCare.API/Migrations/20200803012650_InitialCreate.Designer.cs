// <auto-generated />
using System;
using HealthCare.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HealthCare.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200803012650_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("HealthCare.API.Model.HealthCareProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("MedicalPlan")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telephone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("healthCareProviders");
                });

            modelBuilder.Entity("HealthCare.API.Model.MedicalRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PatientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PatientId")
                        .IsUnique();

                    b.ToTable("medicalRecords");
                });

            modelBuilder.Entity("HealthCare.API.Model.MedicalRegistry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HealthCareProviderId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MedicalRecordId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PatientID")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("PhysicianID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Summary")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HealthCareProviderId");

                    b.HasIndex("MedicalRecordId");

                    b.HasIndex("PatientID");

                    b.HasIndex("PhysicianID");

                    b.ToTable("MedicalRegistry");
                });

            modelBuilder.Entity("HealthCare.API.Model.Patient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CurrentHCProviderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HCCredentialNumber")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("PhysicianID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("CurrentHCProviderId");

                    b.HasIndex("PhysicianID");

                    b.ToTable("patients");
                });

            modelBuilder.Entity("HealthCare.API.Model.Physician", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("License")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("physicians");
                });

            modelBuilder.Entity("HealthCare.API.Model.MedicalRecord", b =>
                {
                    b.HasOne("HealthCare.API.Model.Patient", null)
                        .WithOne("MedicalRecord")
                        .HasForeignKey("HealthCare.API.Model.MedicalRecord", "PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HealthCare.API.Model.MedicalRegistry", b =>
                {
                    b.HasOne("HealthCare.API.Model.HealthCareProvider", "HealthCareProvider")
                        .WithMany()
                        .HasForeignKey("HealthCareProviderId");

                    b.HasOne("HealthCare.API.Model.MedicalRecord", null)
                        .WithMany("MedicalRegistries")
                        .HasForeignKey("MedicalRecordId");

                    b.HasOne("HealthCare.API.Model.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientID");

                    b.HasOne("HealthCare.API.Model.Physician", "Physician")
                        .WithMany()
                        .HasForeignKey("PhysicianID");
                });

            modelBuilder.Entity("HealthCare.API.Model.Patient", b =>
                {
                    b.HasOne("HealthCare.API.Model.HealthCareProvider", "CurrentHCProvider")
                        .WithMany()
                        .HasForeignKey("CurrentHCProviderId");

                    b.HasOne("HealthCare.API.Model.Physician", null)
                        .WithMany("Patients")
                        .HasForeignKey("PhysicianID");
                });
#pragma warning restore 612, 618
        }
    }
}
